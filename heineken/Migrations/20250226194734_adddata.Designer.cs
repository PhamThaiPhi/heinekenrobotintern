// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using heineken.Data;

#nullable disable

namespace heineken.Migrations
{
    [DbContext(typeof(MyDbHei))]
    [Migration("20250226194734_adddata")]
    partial class adddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("heineken.Data.Campaign", b =>
                {
                    b.Property<int>("CampaignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampaignID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CampaignID");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("heineken.Data.Gift", b =>
                {
                    b.Property<int>("GiftID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiftID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainingCount")
                        .HasColumnType("int");

                    b.Property<int?>("RewardRuleRuleID")
                        .HasColumnType("int");

                    b.Property<int>("TotalCount")
                        .HasColumnType("int");

                    b.HasKey("GiftID");

                    b.HasIndex("RewardRuleRuleID");

                    b.ToTable("Gifts");
                });

            modelBuilder.Entity("heineken.Data.Locations", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationID"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int>("RobotCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int");

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("heineken.Data.RecyclingMachine", b =>
                {
                    b.Property<int>("MachineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineID"), 1L, 1);

                    b.Property<int>("AccessCount")
                        .HasColumnType("int");

                    b.Property<string>("ActivityLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BinStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CampaignID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastConnectionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineStatus")
                        .HasColumnType("int");

                    b.HasKey("MachineID");

                    b.HasIndex("CampaignID");

                    b.ToTable("RecyclingMachines");
                });

            modelBuilder.Entity("heineken.Data.RewardRule", b =>
                {
                    b.Property<int>("RuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointsRequired")
                        .HasColumnType("int");

                    b.HasKey("RuleID");

                    b.ToTable("RewardRules");
                });

            modelBuilder.Entity("heineken.Data.Robots", b =>
                {
                    b.Property<int>("RobotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RobotID"), 1L, 1);

                    b.Property<string>("ActivityLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BatteryLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastConnectionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RobotName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RobotStatus")
                        .HasColumnType("int");

                    b.HasKey("RobotID");

                    b.ToTable("Robots");
                });

            modelBuilder.Entity("heineken.Data.Gift", b =>
                {
                    b.HasOne("heineken.Data.RewardRule", null)
                        .WithMany("AvailableGifts")
                        .HasForeignKey("RewardRuleRuleID");
                });

            modelBuilder.Entity("heineken.Data.RecyclingMachine", b =>
                {
                    b.HasOne("heineken.Data.Campaign", null)
                        .WithMany("AssignedMachines")
                        .HasForeignKey("CampaignID");
                });

            modelBuilder.Entity("heineken.Data.Campaign", b =>
                {
                    b.Navigation("AssignedMachines");
                });

            modelBuilder.Entity("heineken.Data.RewardRule", b =>
                {
                    b.Navigation("AvailableGifts");
                });
#pragma warning restore 612, 618
        }
    }
}
